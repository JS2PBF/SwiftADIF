{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The ADIParser notifies its delegate about the ADI data-specifiers (field name, data length, data type indicator, data, and so on) during the parsing of ADI documents."},{"type":"text","text":" "},{"type":"text","text":"It does not itself do anything with those parsed items except report them."}]},{"type":"codeListing","syntax":"swift","code":["let sampleADI = \"\"\"","    <QSO_DATE:8>19900620","    <TIME_ON:4>1523","    <CALL:6>JS2PBF","    <BAND:3>40M","    <MODE:3>FT8","    <EOR>","\"\"\"","","struct Field {","    var fieldName: String","    var dataLength: Int?","    var dataType: String?","    var data: String?","}","","class MyDelegate: ADIParserDelegate {","    var fields: [Field] = []","    private var field: Field?","","    init() { }","","    func parser(_ parser: ADIParser, didStartDataSpecifier fieldName: String, dataLength: Int?, dataType: String?) {","        field = Field(fieldName: fieldName, dataLength: dataLength, dataType: dataType)","    }","","    func parser(_ parser: ADIParser, foundData string: String) {","        field!.data = string","    }","","    func parser(_ parser: ADIParser, didEndDataSpecifier fieldName: String) {","        fields.append(field!)","        field = nil","    }","}","","let delegate = MyDelegate()","let parser = ADIParser(string: sampleADI, ADIParserDelegate: delegate)","let state = parser.parse()","","print(delegate.fields)","\/\/ Prints [","\/\/        Field(fieldName: \"QSO_DATE\", dataLength: Optional(8), dataType: nil, data: Optional(\"19900620\")),","\/\/        Field(fieldName: \"TIME_ON\", dataLength: Optional(4), dataType: nil, data: Optional(\"1523\")),","\/\/        Field(fieldName: \"CALL\", dataLength: Optional(6), dataType: nil, data: Optional(\"JS2PBF\")),","\/\/        Field(fieldName: \"BAND\", dataLength: Optional(3), dataType: nil, data: Optional(\"40M\")),","\/\/        Field(fieldName: \"MODE\", dataLength: Optional(3), dataType: nil, data: Optional(\"FT8\")),","\/\/        Field(fieldName: \"EOR\", dataLength: nil, dataType: nil, data: nil)","\/\/        ]"]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The length of the parsed data is exactly the same as the data-length in the ADI data-specifier."},{"type":"text","text":" "},{"type":"text","text":"If the specified length is smaller thant the actual length of data, only the partial data of the specified length is provided to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ADIParser\/documentation\/ADIParser\/ADIParserDelegate\/parser(_:foundData:)-91p8i"},{"type":"text","text":", and the lest part is treated as “comment” and provided to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ADIParser\/documentation\/ADIParser\/ADIParserDelegate\/parser(_:foundComment:)-p0q5"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"On the other hand, if the specified length is larger than the actual length, the following data-specifier will be treated as “data”."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/adiparser"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ADIParser\/documentation\/ADIParser","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Parse ADIF (Amateur Data Interchange Format) documents."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"ADIParser","title":"ADIParser","symbolKind":"module","role":"collection","modules":[{"name":"ADIParser"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Event-Based Processing","identifiers":["doc:\/\/ADIParser\/documentation\/ADIParser\/ADIParser","doc:\/\/ADIParser\/documentation\/ADIParser\/ADIParserDelegate"]},{"title":"Error Information","identifiers":["doc:\/\/ADIParser\/documentation\/ADIParser\/ADIParseError"]}],"references":{"doc://ADIParser/documentation/ADIParser/ADIParserDelegate/parser(_:foundData:)-91p8i":{"role":"symbol","title":"parser(_:foundData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parser"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ADIParser","preciseIdentifier":"s:9ADIParserAAC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"foundData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/ADIParser\/documentation\/ADIParser\/ADIParserDelegate\/parser(_:foundData:)-91p8i","kind":"symbol","type":"topic","url":"\/documentation\/adiparser\/adiparserdelegate\/parser(_:founddata:)-91p8i"},"doc://ADIParser/documentation/ADIParser/ADIParserDelegate/parser(_:foundComment:)-p0q5":{"role":"symbol","title":"parser(_:foundComment:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parser"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ADIParser","preciseIdentifier":"s:9ADIParserAAC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"foundComment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/ADIParser\/documentation\/ADIParser\/ADIParserDelegate\/parser(_:foundComment:)-p0q5","kind":"symbol","type":"topic","url":"\/documentation\/adiparser\/adiparserdelegate\/parser(_:foundcomment:)-p0q5"},"doc://ADIParser/documentation/ADIParser/ADIParser":{"role":"symbol","title":"ADIParser","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ADIParser"}],"abstract":[{"type":"text","text":"An event driven parser of ADI documents."}],"identifier":"doc:\/\/ADIParser\/documentation\/ADIParser\/ADIParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ADIParser"}],"url":"\/documentation\/adiparser\/adiparser"},"doc://ADIParser/documentation/ADIParser/ADIParseError":{"role":"symbol","title":"ADIParseError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ADIParseError"}],"abstract":[{"type":"text","text":"The errors for ADI parsering."}],"identifier":"doc:\/\/ADIParser\/documentation\/ADIParser\/ADIParseError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ADIParseError"}],"url":"\/documentation\/adiparser\/adiparseerror"},"doc://ADIParser/documentation/ADIParser/ADIParserDelegate":{"role":"symbol","title":"ADIParserDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ADIParserDelegate"}],"abstract":[{"type":"text","text":"The interface an ADI parser uses to inform its delegate about the content of the parsed document."}],"identifier":"doc:\/\/ADIParser\/documentation\/ADIParser\/ADIParserDelegate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ADIParserDelegate"}],"url":"\/documentation\/adiparser\/adiparserdelegate"},"doc://ADIParser/documentation/ADIParser":{"role":"collection","title":"ADIParser","abstract":[{"type":"text","text":"Parse ADIF (Amateur Data Interchange Format) documents."}],"identifier":"doc:\/\/ADIParser\/documentation\/ADIParser","kind":"symbol","type":"topic","url":"\/documentation\/adiparser"}}}